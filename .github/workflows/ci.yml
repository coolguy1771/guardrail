name: CI
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  security-events: write

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Detect if Go files changed to skip unnecessary runs
  changes:
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.changed-files.outputs.go_any_changed }}
      docs: ${{ steps.changed-files.outputs.docs_any_changed }}
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: changed-files
        with:
          files_yaml: |
            go:
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
              - '.github/workflows/go-*.yml'
              - '.github/workflows/ci.yml'
            docs:
              - '**/*.md'
              - 'docs/**'

  # Lint and test Go code
  lint-test:
    needs: changes
    if: needs.changes.outputs.go == 'true'
    uses: ./.github/workflows/go-lint-test.yml
    with:
      go-version: "1.24"

  # Build binaries for multiple platforms
  build:
    needs: [changes, lint-test]
    if: needs.changes.outputs.go == 'true'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platforms: "linux/amd64,linux/arm64"
          - os: macos-latest
            platforms: "darwin/amd64,darwin/arm64"
          - os: windows-latest
            platforms: "windows/amd64"
    uses: ./.github/workflows/go-build.yml
    with:
      go-version: "1.24"
      platforms: ${{ matrix.platforms }}

  # Security scanning (CodeQL only - other tools run in lint job)
  security-scan:
    needs: changes
    if: needs.changes.outputs.go == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24"
          cache: true

      # Run CodeQL (unique to this job)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:go"

  # Upload coverage and artifacts
  coverage-report:
    needs: lint-test
    if: always() && needs.lint-test.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Download coverage artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: coverage-report
          path: ./

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Generate coverage badge
        uses: 5monkeys/cobertura-action@ee5787cc56634acddedc51f21c7947985531e6eb # v14
        with:
          path: coverage.out
          minimum_coverage: 70
          fail_below_threshold: false
          show_line: true
          show_branch: true
          show_missing: true

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: 5monkeys/cobertura-action@ee5787cc56634acddedc51f21c7947985531e6eb # v14
        with:
          path: coverage.out
          minimum_coverage: 70
          fail_below_threshold: false
          show_line: true
          show_branch: true
          pull_request_number: ${{ github.event.pull_request.number }}
          only_changed_files: true


  # Final status check
  ci-status:
    if: always()
    needs: [lint-test, build, security-scan]
    runs-on: ubuntu-latest
    steps:
      - name: Check CI Status
        run: |
          echo "Lint/Test: ${{ needs.lint-test.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Security: ${{ needs.security-scan.result }}"

          if [[ "${{ needs.lint-test.result }}" == "failure" || \
                "${{ needs.build.result }}" == "failure" || \
                "${{ needs.security-scan.result }}" == "failure" ]]; then
            echo "❌ CI failed"
            exit 1
          fi
          echo "✅ CI passed"
